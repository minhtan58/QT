/****************************************************************************

    Copyright (C) 2017 by KingKong JSC
    File: CEMSEnum.h
    Create: 13/12/2017
    Author: Minh Tan

 ****************************************************************************/

#ifndef DATAPOOLID
#define DATAPOOLID

#include <QObject>

class CEMSEnum : public QObject
{
    Q_GADGET
    Q_ENUMS(_DatapoolID)
    Q_ENUMS(_HMIEvent)

public:
    typedef enum _DatapoolID {
        //-----------------SYSTEM-----------------//
        DP_SYS_TIME = 0x0000,
        DP_SYS_DATE,

        DP_SYS_TIME_HOUR,
        DP_SYS_TIME_MINUTES,
        DP_SYS_DATE_DAY,
        DP_SYS_DATE_MONTH,
        DP_SYS_DATE_YEAR,

        DP_SYS_SETTINGS_TIME_AUTOMATIC_UPDATE,
        DP_GENERAL_STATION_ID,
        DP_GENERAL_STATION_NAME,
        DP_GENERAL_RADIUS,

        //-----------------SETTINGS-----------------//
        DP_SETTINGS_DATAVIEW_MODE = 0x2000,
        DP_SETTINGS_DATAVIEW_MODE_CO,
        DP_SETTINGS_DATAVIEW_MODE_NO,
        DP_SETTINGS_DATAVIEW_MODE_NOX,
        DP_SETTINGS_DATAVIEW_MODE_SO2,

        //NETWORK GROUP
        DP_SETTINGS_NETWORK_SERVER_IP,
        DP_SETTINGS_NETWORK_SERVER_PORT,
        DP_SETTINGS_NETWORK_SERVER_INTERVAL,
        DP_SETTINGS_NETWORK_SERVER_STATUS,
        DP_SETTINGS_NETWORK_SERVER_TEST_CONNECTION,

        DP_SETTINGS_NETWORK_FTP_IP,
        DP_SETTINGS_NETWORK_FTP_PORT,
        DP_SETTINGS_NETWORK_FTP_USER,
        DP_SETTINGS_NETWORK_FTP_PASSWORD,
        DP_SETTINGS_NETWORK_FTP_INTERVAL,
        DP_SETTINGS_NETWORK_FTP_STATUS,
        DP_SETTINGS_NETWORK_FTP_TEST_CONNECTION,

        //SERIALPORT
        DP_SETTINGS_SERIALPORT_PORTNAME,
        DP_SETTINGS_SERIALPORT_BAUDRATE,
        DP_SETTINGS_SERIALPORT_INTERVAL,
        DP_SETTINGS_SERIALPORT_STATUS,
        DP_SETTINGS_SERIALPORT_TEST_CONNECTION,
        DP_SETTINGS_SERIALPORT_LIST_AVAIABLE_PORTNAME,

        //ALARM
        DP_SETTINGS_ALARM_O2_STATUS,
        DP_SETTINGS_ALARM_O2_MIN,
        DP_SETTINGS_ALARM_O2_MAX,
        DP_SETTINGS_ALARM_CO_STATUS,
        DP_SETTINGS_ALARM_CO_MIN,
        DP_SETTINGS_ALARM_CO_MAX,
        DP_SETTINGS_ALARM_NO_STATUS,
        DP_SETTINGS_ALARM_NO_MIN,
        DP_SETTINGS_ALARM_NO_MAX,
        DP_SETTINGS_ALARM_NOX_STATUS,
        DP_SETTINGS_ALARM_NOX_MIN,
        DP_SETTINGS_ALARM_NOX_MAX,
        DP_SETTINGS_ALARM_SO2_STATUS,
        DP_SETTINGS_ALARM_SO2_MIN,
        DP_SETTINGS_ALARM_SO2_MAX,
        DP_SETTINGS_ALARM_TEMP_STATUS,
        DP_SETTINGS_ALARM_TEMP_MIN,
        DP_SETTINGS_ALARM_TEMP_MAX,
        DP_SETTINGS_ALARM_OPP_STATUS,
        DP_SETTINGS_ALARM_OPP_MIN,
        DP_SETTINGS_ALARM_OPP_MAX,
        DP_SETTINGS_ALARM_DUST_PM_STATUS,
        DP_SETTINGS_ALARM_DUST_PM_MIN,
        DP_SETTINGS_ALARM_DUST_PM_MAX,
        DP_SETTINGS_ALARM_VEL_STATUS,
        DP_SETTINGS_ALARM_VEL_MIN,
        DP_SETTINGS_ALARM_VEL_MAX,
        DP_SETTINGS_ALARM_FLOW_STATUS,
        DP_SETTINGS_ALARM_FLOW_MIN,
        DP_SETTINGS_ALARM_FLOW_MAX,

        DP_STATUS_ALARM_O2,
        DP_STATUS_ALARM_CO,
        DP_STATUS_ALARM_NO,
        DP_STATUS_ALARM_NOX,
        DP_STATUS_ALARM_SO2,
        DP_STATUS_ALARM_TEMP,
        DP_STATUS_ALARM_OPP,
        DP_STATUS_ALARM_DUST_PM,
        DP_STATUS_ALARM_VEL,
        DP_STATUS_ALARM_FLOW,
        DP_STATUS_ALARM_ON_COUNT,

        //-----------------AIR-----------------//
        DP_AMP_AIR_O2 = 0x8000,
        DP_AMP_AIR_CO,
        DP_AMP_AIR_NO,
        DP_AMP_AIR_SO2,
        DP_AMP_TEMP,
        DP_AMP_OPP,
        DP_AMP_DUST_PM,
        DP_AMP_VEL,

        DP_PPM_AIR_O2,
        DP_PPM_AIR_CO,
        DP_PPM_AIR_NO,
        DP_PPM_AIR_NOX,
        DP_PPM_AIR_SO2,

        DP_AIR_O2,
        DP_AIR_CO,
        DP_AIR_NO,
        DP_AIR_NOX,
        DP_AIR_SO2,
        DP_TEMP,
        DP_OPP,
        DP_DUST_PM,
        DP_VEL,
        DP_FLOW,

        //
        DP_SEARCH_TIME_HISTORY_DATA,
    } DatapoolID;


    typedef enum _HMIEvent {
        //button
        HMI_BUTTON_HOME,
        HMI_BUTTON_SETTING,
        HMI_BUTTON_HISTORY,
        HMI_TEXTINPUT_DONE_STATION_ID,
        HMI_TEXTINPUT_DONE_STATION_NAME,
        HMI_TEXTINPUT_DONE_SERVER_IP,
        HMI_TEXTINPUT_DONE_SERVER_PORT,
        HMI_SPINBOX_CHANGE_SERVER_INTERVAL,
        HMI_BUTTON_SAVE_SETTINGS_NETWORK_FTP,
        HMI_TEXTINPUT_DONE_FTP_IP,
        HMI_TEXTINPUT_DONE_FTP_PORT,
        HMI_TEXTINPUT_DONE_FTP_USERNAME,
        HMI_TEXTINPUT_DONE_FTP_PASSWORD,
        HMI_SPINBOX_CHANGE_FTP_INTERVAL,
        HMI_BUTTON_SAVE_SETTINGS_SERIALPORT,
        HMI_BUTTON_SAVE_SETTINGS_ALARM,
        HMI_BUTTON_TEST_CONNECTIONS_NETWORK_SERVER,
        HMI_BUTTON_TEST_CONNECTIONS_NETWORK_FTP,
        HMI_BUTTON_TEST_CONNECTIONS_SERIALPORT,
        HMI_BUTTON_RELOAD_CONFIGURATION_FILE,
        HMI_BUTTON_DEVELOPER_SAVE_SCREENSHOT,

        HMI_COMBOBOX_SETTINGS_ALARM,

        //keyboard
        HMI_KEYBOARD_DELETE,
        HMI_KEYBOARD_SAVE,

        //switch view air
        HMI_DATAVIEW_SWITCH_UNIT,

        //tab
        HMI_TAB_SELECT,

        //text input
        HMI_TEXTINPUT_FOCUS_CHANGED,

        //popup
        HMI_REQUEST_SHOW_COMMON_POPUP,
        HMI_REQUEST_HIDE_POPUP,

        //switch
        HMI_SWITCH_UPDATE_TIME_AUTOMATIC,
        HMI_BUTTON_SET_RADIUS,
        HMI_BUTTON_SET_DATE_TIME,

        HMI_LIST_REQUEST_GET_HISTORY_DATA,
        HMI_LIST_REQUEST_DELETE_HISTORY_DATA,
        HMI_BUTTON_REQ_EXPORT,

        HMI_REQUEST_SHOW_EXPORT_POPUP,
        HMI_BUTTON_BELL,
    } HMIEvent;

    enum DbHandle {
        //db request
        DB_HANDLE_START = 0xA000,
        DB_RESPONSE_GET_HISTORY_DATA_FINISHED,                       //model request
        DB_REQUETS_ADD_HISTORY_DATA_ROW,
        DB_REQUEST_SENDDATA_TO_SERVER,
        DB_REQUEST_ADD_MISSING_DATA_ROW,
        DB_REQUEST_REMOVE_MISSING_DATA_ROW,
        DB_HANDLE_END,
    };

};

#endif // DATAPOOLID

